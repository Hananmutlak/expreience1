{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,oB,I,G,E,E,O,C,gB,I,G,E,E,O,C,mB,I,GCAA,IAAM,EAAe,wCAGd,eAAe,IACpB,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,GAC7B,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAClC,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,8BAA+B,GACvC,CACR,CACF,CAGO,eAAe,EAAc,CAAU,EAC5C,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,EAAc,CACzC,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,EACvB,GACA,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAClC,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,2BAA4B,GACpC,CACR,CACF,CAGO,eAAe,EAAiB,CAAE,EACvC,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAA,EAAG,EAAa,CAAC,EAAE,EAAA,CAAI,CAAE,CACpD,OAAQ,QACV,GACA,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,+BAClC,OAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CAEd,MADA,QAAQ,KAAK,CAAC,6BAA8B,GACtC,CACR,CACF,C,G,I,E,E,SCGA,SAAS,EAAU,CAAO,EACxB,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,QACpB,EAAQ,WAAW,CAAG,EACtB,SAAS,IAAI,CAAC,OAAO,CAAC,GACtB,WAAW,IAAM,EAAQ,MAAM,GAAI,IACrC,CAnDA,SAAS,gBAAgB,CAAC,mBAAoB,UAC5C,GAAI,CACF,IAAM,EAAc,MAAM,AAAA,CAAA,EAAA,EAAA,iBAAgB,AAAhB,KAC1B,AAMJ,SAA2B,CAAW,EACpC,IAAM,EAAY,SAAS,cAAc,CAAC,oBAG1C,GAFA,EAAU,SAAS,CAAG,GAElB,AAAuB,IAAvB,EAAY,MAAM,CAAQ,CAC5B,EAAU,SAAS,CAAG,iDACtB,MACF,CAEA,EAAY,OAAO,CAAC,AAAA,IAClB,IAAM,EAAe,SAAS,aAAa,CAAC,MAC5C,CAAA,EAAa,SAAS,CAAG,kBACzB,EAAa,SAAS,CAAG;AACnB,UAAA,EAAE,EAAI,OAAO,CAAC;AAAM,qCACI,EAAE,EAAI,IAAI,CAAC;AACX,kCAAA,EAAE,EAAI,QAAQ,CAAC;AACxC,SAAA,EAAE,EAAI,WAAW,CAAC;AACe,0CAAA,EAAE,EAAI,GAAG,CAAC;AAChD,IAAA,CAAC,CACD,EAAU,WAAW,CAAC,EACxB,GAGA,SAAS,gBAAgB,CAAC,eAAe,OAAO,CAAC,AAAA,IAC/C,EAAI,gBAAgB,CAAC,QAAS,MAAO,IACnC,IAAM,EAAK,EAAE,MAAM,CAAC,YAAY,CAAC,WACjC,GAAI,CACF,MAAM,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,GACvB,EAAE,MAAM,CAAC,OAAO,CAAC,oBAAoB,MAAM,EAC7C,CAAE,MAAO,EAAO,CACd,EAAU,qDACZ,CACF,EACF,EACF,EAxCsB,EACpB,CAAE,MAAO,EAAO,CACd,EAAU,kDACZ,CACF","sources":["<anon>","src/js/api.js","src/js/main.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5bc3\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5bc3\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"iOnG0\", function(module, exports) {\n\n$parcel$export(module.exports, \"getAllExperiences\", () => $db1f432b457e32b4$export$38470e3103b9c901);\n$parcel$export(module.exports, \"addExperience\", () => $db1f432b457e32b4$export$9211fe6e27dc654a);\n$parcel$export(module.exports, \"deleteExperience\", () => $db1f432b457e32b4$export$116b541b140a9c90);\nconst $db1f432b457e32b4$var$API_BASE_URL = 'http://localhost:5000/api/experiences';\nasync function $db1f432b457e32b4$export$38470e3103b9c901() {\n    try {\n        const response = await fetch($db1f432b457e32b4$var$API_BASE_URL);\n        if (!response.ok) throw new Error('Network response was not ok');\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching experiences:', error);\n        throw error;\n    }\n}\nasync function $db1f432b457e32b4$export$9211fe6e27dc654a(experience) {\n    try {\n        const response = await fetch($db1f432b457e32b4$var$API_BASE_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(experience)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        return await response.json();\n    } catch (error) {\n        console.error('Error adding experience:', error);\n        throw error;\n    }\n}\nasync function $db1f432b457e32b4$export$116b541b140a9c90(id) {\n    try {\n        const response = await fetch(`${$db1f432b457e32b4$var$API_BASE_URL}/${id}`, {\n            method: 'DELETE'\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        return await response.json();\n    } catch (error) {\n        console.error('Error deleting experience:', error);\n        throw error;\n    }\n}\n\n});\n\n\nvar $iOnG0 = parcelRequire(\"iOnG0\");\ndocument.addEventListener('DOMContentLoaded', async ()=>{\n    try {\n        const experiences = await (0, $iOnG0.getAllExperiences)();\n        $54b47fc030b7b21e$var$renderExperiences(experiences);\n    } catch (error) {\n        $54b47fc030b7b21e$var$showError(\"Ett fel intr\\xe4ffade vid h\\xe4mtning av erfarenheter\");\n    }\n});\nfunction $54b47fc030b7b21e$var$renderExperiences(experiences) {\n    const container = document.getElementById('experiences-list');\n    container.innerHTML = '';\n    if (experiences.length === 0) {\n        container.innerHTML = \"<p>Inga erfarenheter har registrerats \\xe4nnu</p>\";\n        return;\n    }\n    experiences.forEach((exp)=>{\n        const experienceEl = document.createElement('div');\n        experienceEl.className = 'experience-card';\n        experienceEl.innerHTML = `\n      <h3>${exp.company}</h3>\n      <p><strong>Tj\\xe4nst:</strong> ${exp.role}</p>\n      <p><strong>Period:</strong> ${exp.duration}</p>\n      <p>${exp.description}</p>\n      <button class=\"delete-btn\" data-id=\"${exp._id}\">Ta bort</button>\n    `;\n        container.appendChild(experienceEl);\n    });\n    // Lägg till händelsehanterare för borttagningsknappar\n    document.querySelectorAll('.delete-btn').forEach((btn)=>{\n        btn.addEventListener('click', async (e)=>{\n            const id = e.target.getAttribute('data-id');\n            try {\n                await (0, $iOnG0.deleteExperience)(id);\n                e.target.closest('.experience-card').remove();\n            } catch (error) {\n                $54b47fc030b7b21e$var$showError(\"Ett fel intr\\xe4ffade vid borttagning av erfarenheten\");\n            }\n        });\n    });\n}\nfunction $54b47fc030b7b21e$var$showError(message) {\n    const errorEl = document.createElement('div');\n    errorEl.className = 'error';\n    errorEl.textContent = message;\n    document.body.prepend(errorEl);\n    setTimeout(()=>errorEl.remove(), 3000);\n}\n\n\n//# sourceMappingURL=experience.65455ff0.js.map\n","const API_BASE_URL = 'http://localhost:5000/api/experiences';\r\n\r\n// جلب جميع الخبرات\r\nexport async function getAllExperiences() {\r\n  try {\r\n    const response = await fetch(API_BASE_URL);\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching experiences:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// إضافة خبرة جديدة\r\nexport async function addExperience(experience) {\r\n  try {\r\n    const response = await fetch(API_BASE_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(experience),\r\n    });\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error adding experience:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// حذف خبرة\r\nexport async function deleteExperience(id) {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error deleting experience:', error);\r\n    throw error;\r\n  }\r\n}","import { getAllExperiences, deleteExperience } from './api.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  try {\r\n    const experiences = await getAllExperiences();\r\n    renderExperiences(experiences);\r\n  } catch (error) {\r\n    showError('Ett fel inträffade vid hämtning av erfarenheter');\r\n  }\r\n});\r\n\r\nfunction renderExperiences(experiences) {\r\n  const container = document.getElementById('experiences-list');\r\n  container.innerHTML = '';\r\n\r\n  if (experiences.length === 0) {\r\n    container.innerHTML = '<p>Inga erfarenheter har registrerats ännu</p>';\r\n    return;\r\n  }\r\n\r\n  experiences.forEach(exp => {\r\n    const experienceEl = document.createElement('div');\r\n    experienceEl.className = 'experience-card';\r\n    experienceEl.innerHTML = `\r\n      <h3>${exp.company}</h3>\r\n      <p><strong>Tjänst:</strong> ${exp.role}</p>\r\n      <p><strong>Period:</strong> ${exp.duration}</p>\r\n      <p>${exp.description}</p>\r\n      <button class=\"delete-btn\" data-id=\"${exp._id}\">Ta bort</button>\r\n    `;\r\n    container.appendChild(experienceEl);\r\n  });\r\n\r\n  // Lägg till händelsehanterare för borttagningsknappar\r\n  document.querySelectorAll('.delete-btn').forEach(btn => {\r\n    btn.addEventListener('click', async (e) => {\r\n      const id = e.target.getAttribute('data-id');\r\n      try {\r\n        await deleteExperience(id);\r\n        e.target.closest('.experience-card').remove();\r\n      } catch (error) {\r\n        showError('Ett fel inträffade vid borttagning av erfarenheten');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction showError(message) {\r\n  const errorEl = document.createElement('div');\r\n  errorEl.className = 'error';\r\n  errorEl.textContent = message;\r\n  document.body.prepend(errorEl);\r\n  setTimeout(() => errorEl.remove(), 3000);\r\n}\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$db1f432b457e32b4$export$38470e3103b9c901","$db1f432b457e32b4$export$9211fe6e27dc654a","$db1f432b457e32b4$export$116b541b140a9c90","$db1f432b457e32b4$var$API_BASE_URL","response","fetch","ok","json","error","console","experience","method","headers","body","JSON","stringify","$iOnG0","$54b47fc030b7b21e$var$showError","message","errorEl","document","createElement","className","textContent","prepend","setTimeout","remove","addEventListener","experiences","getAllExperiences","$54b47fc030b7b21e$var$renderExperiences","container","getElementById","innerHTML","length","forEach","exp","experienceEl","company","role","duration","description","_id","appendChild","querySelectorAll","btn","target","getAttribute","deleteExperience","closest"],"version":3,"file":"experience.65455ff0.js.map"}